apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  labels:
    app: loki
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: loki
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: "{{ .Values.loki.image.repository }}:{{ .Values.loki.image.tag }}"
          args:
            - "-config.file=/etc/loki/loki.yaml"
          ports:
            - containerPort: 3100
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: /data/loki
          livenessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: loki-config
        - name: storage
          hostPath:
            path: /mnt/data/loki  # Path on the host machine
            type: DirectoryOrCreate  # Ensures the directory is created if it doesn't exist
